properties ([pipelineTriggers([githubPush()])])

node { git url: 'github private repo', branch: 'storage-planner' }

pipeline {
	agent any

	stages {
		stage ("SCM Checkout") {
		    steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/storage-planner']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'github private repo']]])
		    }
	    }
		stage ("Sonar Code Coverage") {
			steps {
			    withSonarQubeEnv('sonar') {
				sh "/opt/sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner -Dsonar.host.url=http://10.226.224.65:9000 -Dsonar.projectName=CMS_Backend -Dsonar.projectVersion=1.0 -Dsonar.projectKey=CMS_Backend -Dsonar.sources=. -Dsonar.projectBaseDir=/var/lib/jenkins/workspace/CMS_Backend"
			}
			}
		}
        stage("Quality Gate") {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
                    // true = set pipeline to UNSTABLE, false = don't
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        stage ("Docker Image Build") {
            steps {
                dir ("dockerfile path") {
                sh "docker build -t campaign ."
                }
            }
        }
        //stage ('Trigger Production Job ') {
        //    steps {
        //    build job: 'CMS Production Pipeline', wait: false
        //    }
        //}
	}
    post {
    success {
        emailext (
            to: 'eswar.reddy-ext@continental-corporation.com',
            subject: "JOB: ${env.JOB_NAME} - SUCCESS",
            body: "JOB SUCCESS - \"${env.JOB_NAME}\" Build No: ${env.BUILD_NUMBER}\n\nClick on the below link to view the logs:\n ${env.BUILD_URL}\n"
        )
    }
    failure {
		emailext (
            to: 'eswar.reddy-ext@continental-corporation.com',
            subject: "JOB: ${env.JOB_NAME} - FAILURE",
            body: "JOB FAILURE - \"${env.JOB_NAME}\" Build No: ${env.BUILD_NUMBER}\n\nClick on the below link to view the logs:\n ${env.BUILD_URL}\n"
        )
    }
    }
}